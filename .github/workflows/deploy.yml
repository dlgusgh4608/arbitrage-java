# 참조 사이트
# https://velog.io/@juhyeon1114/%EC%8B%A4%EC%A0%84-Github-actions-AWS-Code-deploy%EB%A1%9C-Spring-boot-%EB%B0%B0%ED%8F%AC-%EC%9E%90%EB%8F%99%ED%99%94%ED%95%98%EA%B8%B0#-stopsh-%EC%9E%91%EC%84%B1
# https://bcp0109.tistory.com/363
name: Arbitrage-java-deploy-action

on:
  push:
    branches: [ "main" ]

env:
  S3_BUCKET: arbitrage-java-bucket
  CODEDEPLOY_APP: arbitrage-code-deploy
  CODEDEPLOY_GROUP: arbitrage-code-deploy-group


permissions:
  id-token: write  # OIDC 필수 권한
  contents: read
    
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: JDK17 셋업
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

      # https://github.com/marketplace/actions/build-with-gradle
    - name: Gradle셋업
      uses: gradle/actions/setup-gradle@v4

      # https://github.com/marketplace/actions/setup-redis-with-password
      # Redis의 env 기본값을 넣음
    - name: Redis셋업
      uses: getong/redis-action@v1
      with:
        redis version: 'latest'
        host port: 6379
        container port: 6379
        redis password: '123456'

      # https://github.com/marketplace/actions/setup-postgresql
      # postgreSQL의 env 기본값을 넣음
    - name: PG셋업
      uses: harmon758/postgresql-action@v1
      with:
        postgresql version: '16'
        postgresql db: 'postgres'
        postgresql user: 'postgres'
        postgresql password: '5432'

    - name: Gradle 권한 변경 및 빌드
      run: chmod +x ./gradlew && ./gradlew clean build --info

      # deploy폴더 만들기
      # build완료된 jar파일을 deploy로 복사
      # appspec.yml을 deploy로 복사
      # scripts 폴더를 deploy로 복사
      # deploy폴더로 이동 후 안의 내용 전부를 커밋해시.zip으로 생성
      # 폴더 뒤로 이동
    - name: 빌드 결과물 폴더로 취합
      run: |
        mkdir deploy 
        cp build/libs/*.jar deploy/
        cp appspec.yml deploy/
        cp -r scripts/ deploy/

        cd deploy
        zip -r ../$GITHUB_SHA.zip .
        cd ..

      # https://github.com/marketplace/actions/configure-aws-credentials-action-for-github-actions
    - name: AWS CLI 셋업
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::430118849354:role/HelloWorld@GithubAction_with_OIDC_from_Arbitrage-Java
        aws-region: ap-northeast-2

    - name: S3 업로드
      run: |
          aws s3 cp $GITHUB_SHA.zip s3://${{ env.S3_BUCKET }}/

    - name: CodeDeploy 트리거
      run: |
          aws deploy create-deployment \
            --application-name ${{ env.CODEDEPLOY_APP }} \
            --deployment-group-name ${{ env.CODEDEPLOY_GROUP }} \
            --s3-location bucket=${{ env.S3_BUCKET }},bundleType=zip,key=$GITHUB_SHA.zip